PROGRAM_ID,IDL,IDL_HASH,IS_VALID,SUBMITTED_BY,DATE_SUBMITTED,FIRST_BLOCK_ID,EARLIEST_DECODED_BLOCK,BACKFILL_STATUS,DIM_IDLS_ID,INSERTED_TIMESTAMP,MODIFIED_TIMESTAMP
2wT8Yq49kHgDzXuPxZSaeLaH1qbmGXtEyPy64bL7aD3c,"{""accounts"":[{""name"":""Amm"",""type"":{""fields"":[{""name"":""initializerKey"",""type"":""publicKey""},{""name"":""initializerDepositTokenAccount"",""type"":""publicKey""},{""name"":""initializerReceiveTokenAccount"",""type"":""publicKey""},{""name"":""initializerAmount"",""type"":""u64""},{""name"":""takerAmount"",""type"":""u64""},{""docs"":[""Is the swap initialized, with data written to it""],""name"":""isInitialized"",""type"":""bool""},{""docs"":[""Bump seed used to generate the program address / authority""],""name"":""bumpSeed"",""type"":""u8""},{""docs"":[""Freeze swap""],""name"":""freezeTrade"",""type"":""u8""},{""docs"":[""Freeze deposit""],""name"":""freezeDeposit"",""type"":""u8""},{""docs"":[""Freeze withdraw""],""name"":""freezeWithdraw"",""type"":""u8""},{""docs"":[""Base decimals account""],""name"":""baseDecimals"",""type"":""u8""},{""docs"":[""Token program ID associated with the swap""],""name"":""tokenProgramId"",""type"":""publicKey""},{""docs"":[""Address of token A liquidity account""],""name"":""tokenAAccount"",""type"":""publicKey""},{""docs"":[""Address of token B liquidity account""],""name"":""tokenBAccount"",""type"":""publicKey""},{""docs"":[""Address of pool token mint""],""name"":""poolMint"",""type"":""publicKey""},{""docs"":[""Address of token A mint""],""name"":""tokenAMint"",""type"":""publicKey""},{""docs"":[""Address of token B mint""],""name"":""tokenBMint"",""type"":""publicKey""},{""docs"":[""Address of pool fee account""],""name"":""feeAccount"",""type"":""publicKey""},{""docs"":[""Oracle Main account""],""name"":""oracleMainAccount"",""type"":""publicKey""},{""docs"":[""Oracle Sub account""],""name"":""oracleSubAccount"",""type"":""publicKey""},{""docs"":[""oracle Pc account""],""name"":""oraclePcAccount"",""type"":""publicKey""},{""docs"":[""Fees associated with swap""],""name"":""fees"",""type"":{""defined"":""AmmFees""}},{""docs"":[""Curve associated with swap""],""name"":""curve"",""type"":{""defined"":""AmmCurve""}},{""docs"":[""Curve associated with swap""],""name"":""config"",""type"":{""defined"":""AmmConfig""}},{""docs"":[""Temp area""],""name"":""ammPTemp1"",""type"":""publicKey""},{""docs"":[""Temp area""],""name"":""ammPTemp2"",""type"":""publicKey""},{""docs"":[""Temp area""],""name"":""ammPTemp3"",""type"":""publicKey""},{""docs"":[""Temp area""],""name"":""ammPTemp4"",""type"":""publicKey""},{""docs"":[""Temp area""],""name"":""ammPTemp5"",""type"":""publicKey""}],""kind"":""struct""}}],""errors"":[{""code"":6000,""msg"":""Swap account already in use"",""name"":""AlreadyInUse""},{""code"":6001,""msg"":""Invalid program address generated from bump seed and key"",""name"":""InvalidProgramAddress""},{""code"":6002,""msg"":""Input account owner is not the program address"",""name"":""InvalidOwner""},{""code"":6003,""msg"":""Output pool account owner cannot be the program address"",""name"":""InvalidOutputOwner""},{""code"":6004,""msg"":""Deserialized account is not an SPL Token mint"",""name"":""ExpectedMint""},{""code"":6005,""msg"":""Deserialized account is not an SPL Token account"",""name"":""ExpectedAccount""},{""code"":6006,""msg"":""Input token account empty"",""name"":""EmptySupply""},{""code"":6007,""msg"":""Pool token mint has a non-zero supply"",""name"":""InvalidSupply""},{""code"":6008,""msg"":""Token account has a delegate"",""name"":""InvalidDelegate""},{""code"":6009,""msg"":""InvalidInput"",""name"":""InvalidInput""},{""code"":6010,""msg"":""Address of the provided swap token account is incorrect"",""name"":""IncorrectSwapAccount""},{""code"":6011,""msg"":""Address of the provided pool token mint is incorrect"",""name"":""IncorrectPoolMint""},{""code"":6012,""msg"":""InvalidOutput"",""name"":""InvalidOutput""},{""code"":6013,""msg"":""General calculation failure due to overflow or underflow"",""name"":""CalculationFailure""},{""code"":6014,""msg"":""Invalid instruction"",""name"":""InvalidInstruction""},{""code"":6015,""msg"":""Swap input token accounts have the same mint"",""name"":""RepeatedMint""},{""code"":6016,""msg"":""Swap instruction exceeds desired slippage limit"",""name"":""ExceededSlippage""},{""code"":6017,""msg"":""Token account has a close authority"",""name"":""InvalidCloseAuthority""},{""code"":6018,""msg"":""Pool token mint has a freeze authority"",""name"":""InvalidFreezeAuthority""},{""code"":6019,""msg"":""Pool fee token account incorrect"",""name"":""IncorrectFeeAccount""},{""code"":6020,""msg"":""Given pool token amount results in zero trading tokens"",""name"":""ZeroTradingTokens""},{""code"":6021,""msg"":""Fee calculation failed due to overflow, underflow, or unexpected 0"",""name"":""FeeCalculationFailure""},{""code"":6022,""msg"":""Conversion to u64 failed with an overflow or underflow"",""name"":""ConversionFailure""},{""code"":6023,""msg"":""The provided fee does not match the program owners constraints"",""name"":""InvalidFee""},{""code"":6024,""msg"":""The provided token program does not match the token program expected by the swap"",""name"":""IncorrectTokenProgramId""},{""code"":6025,""msg"":""Address of the provided oracle account is incorrect"",""name"":""IncorrectOracleAccount""},{""code"":6026,""msg"":""Address of the provided config account is incorrect"",""name"":""IncorrectConfigAccount""},{""code"":6027,""msg"":""The provided curve type is not supported by the program owner"",""name"":""UnsupportedCurveType""},{""code"":6028,""msg"":""The provided curve parameters are invalid"",""name"":""InvalidCurve""},{""code"":6029,""msg"":""The operation cannot be performed on the given curve"",""name"":""UnsupportedCurveOperation""},{""code"":6030,""msg"":""Pyth oracle status is not trading"",""name"":""InvalidPythStatus""},{""code"":6031,""msg"":""Could not retrieve updated price feed from the Pyth oracle"",""name"":""InvalidPythPrice""},{""code"":6032,""msg"":""Address of the provided signer account is incorrect"",""name"":""IncorrectSigner""},{""code"":6033,""msg"":""Swap amount exceeds pool balance"",""name"":""ExceedPoolBalance""},{""code"":6034,""msg"":""Program is frozen"",""name"":""ProgramIsFrozen""},{""code"":6035,""msg"":""Oracle confidence is too high"",""name"":""OracleConfidence""},{""code"":6036,""msg"":""Over Pool Cap Amount"",""name"":""OverCapAmount""},{""code"":6037,""msg"":""Invalid update wallet address"",""name"":""InvalidUpdateAccount""},{""code"":6038,""msg"":""Invalid update param"",""name"":""InvalidUpdateParam""},{""code"":6039,""msg"":""Invalid inner swap account"",""name"":""InvalidInnerSwapAccount""},{""code"":6040,""msg"":""Exception err"",""name"":""ExceptionErr""}],""instructions"":[{""accounts"":[{""isMut"":false,""isSigner"":false,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""amm""},{""isMut"":false,""isSigner"":true,""name"":""userTransferAuthority""},{""isMut"":true,""isSigner"":false,""name"":""sourceInfo""},{""isMut"":true,""isSigner"":false,""name"":""destinationInfo""},{""isMut"":true,""isSigner"":false,""name"":""swapSource""},{""isMut"":true,""isSigner"":false,""name"":""swapDestination""},{""isMut"":true,""isSigner"":false,""name"":""poolMint""},{""isMut"":true,""isSigner"":false,""name"":""feeAccount""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""oracleMainAccount""},{""isMut"":false,""isSigner"":false,""name"":""oracleSubAccount""},{""isMut"":false,""isSigner"":false,""name"":""oraclePcAccount""}],""args"":[{""name"":""amountIn"",""type"":""u64""},{""name"":""minimumAmountOut"",""type"":""u64""}],""name"":""swap""},{""accounts"":[{""isMut"":true,""isSigner"":false,""name"":""amm""},{""isMut"":false,""isSigner"":false,""name"":""authority""},{""isMut"":false,""isSigner"":true,""name"":""userTransferAuthorityInfo""},{""isMut"":true,""isSigner"":false,""name"":""sourceAInfo""},{""isMut"":true,""isSigner"":false,""name"":""sourceBInfo""},{""isMut"":true,""isSigner"":false,""name"":""tokenA""},{""isMut"":true,""isSigner"":false,""name"":""tokenB""},{""isMut"":true,""isSigner"":false,""name"":""poolMint""},{""isMut"":true,""isSigner"":false,""name"":""destination""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""}],""args"":[{""name"":""poolTokenAmount"",""type"":""u64""},{""name"":""maximumTokenAAmount"",""type"":""u64""},{""name"":""maximumTokenBAmount"",""type"":""u64""}],""name"":""depositAllTokenTypes""},{""accounts"":[{""isMut"":true,""isSigner"":false,""name"":""amm""},{""isMut"":false,""isSigner"":false,""name"":""authority""},{""isMut"":false,""isSigner"":true,""name"":""userTransferAuthorityInfo""},{""isMut"":true,""isSigner"":false,""name"":""sourceInfo""},{""isMut"":true,""isSigner"":false,""name"":""tokenA""},{""isMut"":true,""isSigner"":false,""name"":""tokenB""},{""isMut"":true,""isSigner"":false,""name"":""poolMint""},{""isMut"":true,""isSigner"":false,""name"":""destTokenAInfo""},{""isMut"":true,""isSigner"":false,""name"":""destTokenBInfo""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""}],""args"":[{""name"":""poolTokenAmount"",""type"":""u64""},{""name"":""minimumTokenAAmount"",""type"":""u64""},{""name"":""minimumTokenBAmount"",""type"":""u64""}],""name"":""withdrawAllTokenTypes""}],""name"":""lifinity_amm_v2"",""types"":[{""docs"":[""Encapsulates all fee information and calculations for swap operations""],""name"":""AmmFees"",""type"":{""fields"":[{""name"":""tradeFeeNumerator"",""type"":""u64""},{""name"":""tradeFeeDenominator"",""type"":""u64""},{""name"":""ownerTradeFeeNumerator"",""type"":""u64""},{""name"":""ownerTradeFeeDenominator"",""type"":""u64""},{""name"":""ownerWithdrawFeeNumerator"",""type"":""u64""},{""name"":""ownerWithdrawFeeDenominator"",""type"":""u64""},{""name"":""hostFeeNumerator"",""type"":""u64""},{""name"":""hostFeeDenominator"",""type"":""u64""}],""kind"":""struct""}},{""name"":""AmmCurve"",""type"":{""fields"":[{""name"":""curveType"",""type"":""u8""},{""name"":""curveParameters"",""type"":""u64""}],""kind"":""struct""}},{""name"":""AmmConfig"",""type"":{""fields"":[{""name"":""lastPrice"",""type"":""u64""},{""name"":""lastBalancedPrice"",""type"":""u64""},{""name"":""configDenominator"",""type"":""u64""},{""name"":""volumeX"",""type"":""u64""},{""name"":""volumeY"",""type"":""u64""},{""name"":""volumeXInY"",""type"":""u64""},{""name"":""depositCap"",""type"":""u64""},{""name"":""regressionTarget"",""type"":""u64""},{""name"":""oracleType"",""type"":""u64""},{""name"":""oracleStatus"",""type"":""u64""},{""name"":""oracleMainSlotLimit"",""type"":""u64""},{""name"":""oracleSubConfidenceLimit"",""type"":""u64""},{""name"":""oracleSubSlotLimit"",""type"":""u64""},{""name"":""oraclePcConfidenceLimit"",""type"":""u64""},{""name"":""oraclePcSlotLimit"",""type"":""u64""},{""name"":""stdSpread"",""type"":""u64""},{""name"":""stdSpreadBuffer"",""type"":""u64""},{""name"":""spreadCoefficient"",""type"":""u64""},{""name"":""priceBufferCoin"",""type"":""i64""},{""name"":""priceBufferPc"",""type"":""i64""},{""name"":""rebalanceRatio"",""type"":""u64""},{""name"":""feeTrade"",""type"":""u64""},{""name"":""feePlatform"",""type"":""u64""},{""name"":""oracleMainSlotBuffer"",""type"":""u64""},{""name"":""configTemp4"",""type"":""u64""},{""name"":""configTemp5"",""type"":""u64""},{""name"":""configTemp6"",""type"":""u64""},{""name"":""configTemp7"",""type"":""u64""},{""name"":""configTemp8"",""type"":""u64""}],""kind"":""struct""}},{""docs"":[""Curve types supported by the token-swap program.""],""name"":""CurveType"",""type"":{""kind"":""enum"",""variants"":[{""name"":""Standard""},{""name"":""ConstantProduct""}]}}],""version"":""0.1.1""}",c25d5224585f7f9303e9ebb0717710dc0e86b5d31cac04f0403a89cda5978df0,true,flipside,2025-04-01 19:08:10.332,"null","null",not_started,7bf0c199e4044609bef55425a415e47c,2025-04-01 19:12:23.416,2025-04-02 21:39:28.192
pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA,"{""accounts"":[{""discriminator"":[149,8,156,202,160,252,176,217],""name"":""GlobalConfig""},{""discriminator"":[241,154,109,4,17,177,109,188],""name"":""Pool""}],""address"":""pAMMBay6oceH9fJKBRHGP5D4bD4sWpmSwMn52FMfXEA"",""errors"":[{""code"":6000,""name"":""FeeBasisPointsExceedsMaximum""},{""code"":6001,""name"":""ZeroBaseAmount""},{""code"":6002,""name"":""ZeroQuoteAmount""},{""code"":6003,""name"":""TooLittlePoolTokenLiquidity""},{""code"":6004,""name"":""ExceededSlippage""},{""code"":6005,""name"":""InvalidAdmin""},{""code"":6006,""name"":""UnsupportedBaseMint""},{""code"":6007,""name"":""UnsupportedQuoteMint""},{""code"":6008,""name"":""InvalidBaseMint""},{""code"":6009,""name"":""InvalidQuoteMint""},{""code"":6010,""name"":""InvalidLpMint""},{""code"":6011,""name"":""AllProtocolFeeRecipientsShouldBeNonZero""},{""code"":6012,""name"":""UnsortedNotUniqueProtocolFeeRecipients""},{""code"":6013,""name"":""InvalidProtocolFeeRecipient""},{""code"":6014,""name"":""InvalidPoolBaseTokenAccount""},{""code"":6015,""name"":""InvalidPoolQuoteTokenAccount""},{""code"":6016,""name"":""BuyMoreBaseAmountThanPoolReserves""},{""code"":6017,""name"":""DisabledCreatePool""},{""code"":6018,""name"":""DisabledDeposit""},{""code"":6019,""name"":""DisabledWithdraw""},{""code"":6020,""name"":""DisabledBuy""},{""code"":6021,""name"":""DisabledSell""},{""code"":6022,""name"":""SameMint""},{""code"":6023,""name"":""Overflow""},{""code"":6024,""name"":""Truncation""},{""code"":6025,""name"":""DivisionByZero""},{""code"":6026,""name"":""NewSizeLessThanCurrentSize""},{""code"":6027,""name"":""AccountTypeNotSupported""}],""events"":[{""discriminator"":[103,244,82,31,44,245,119,119],""name"":""BuyEvent""},{""discriminator"":[107,52,89,129,55,226,81,22],""name"":""CreateConfigEvent""},{""discriminator"":[177,49,12,210,160,118,167,116],""name"":""CreatePoolEvent""},{""discriminator"":[120,248,61,83,31,142,107,144],""name"":""DepositEvent""},{""discriminator"":[107,253,193,76,228,202,27,104],""name"":""DisableEvent""},{""discriminator"":[97,97,215,144,93,146,22,124],""name"":""ExtendAccountEvent""},{""discriminator"":[62,47,55,10,165,3,220,42],""name"":""SellEvent""},{""discriminator"":[225,152,171,87,246,63,66,234],""name"":""UpdateAdminEvent""},{""discriminator"":[90,23,65,35,62,244,188,208],""name"":""UpdateFeeConfigEvent""},{""discriminator"":[22,9,133,26,160,44,71,192],""name"":""WithdrawEvent""}],""instructions"":[{""accounts"":[{""name"":""pool""},{""name"":""user"",""signer"":true,""writable"":true},{""name"":""global_config""},{""name"":""base_mint"",""relations"":[""pool""]},{""name"":""quote_mint"",""relations"":[""pool""]},{""name"":""user_base_token_account"",""writable"":true},{""name"":""user_quote_token_account"",""writable"":true},{""name"":""pool_base_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""pool_quote_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""protocol_fee_recipient""},{""name"":""protocol_fee_recipient_token_account"",""pda"":{""program"":{""kind"":""const"",""value"":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]},""seeds"":[{""kind"":""account"",""path"":""protocol_fee_recipient""},{""kind"":""account"",""path"":""quote_token_program""},{""kind"":""account"",""path"":""quote_mint""}]},""writable"":true},{""name"":""base_token_program""},{""name"":""quote_token_program""},{""address"":""11111111111111111111111111111111"",""name"":""system_program""},{""address"":""ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"",""name"":""associated_token_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""base_amount_out"",""type"":""u64""},{""name"":""max_quote_amount_in"",""type"":""u64""}],""discriminator"":[102,6,61,18,1,218,235,234],""name"":""buy""},{""accounts"":[{""address"":""8LWu7QM2dGR1G8nKDHthckea57bkCzXyBTAKPJUBDHo8"",""name"":""admin"",""signer"":true,""writable"":true},{""name"":""global_config"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[103,108,111,98,97,108,95,99,111,110,102,105,103]}]},""writable"":true},{""address"":""11111111111111111111111111111111"",""name"":""system_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_recipients"",""type"":{""array"":[""pubkey"",8]}}],""discriminator"":[201,207,243,114,75,111,47,189],""name"":""create_config""},{""accounts"":[{""name"":""pool"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[112,111,111,108]},{""kind"":""arg"",""path"":""index""},{""kind"":""account"",""path"":""creator""},{""kind"":""account"",""path"":""base_mint""},{""kind"":""account"",""path"":""quote_mint""}]},""writable"":true},{""name"":""global_config""},{""name"":""creator"",""signer"":true,""writable"":true},{""name"":""base_mint""},{""name"":""quote_mint""},{""name"":""lp_mint"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[112,111,111,108,95,108,112,95,109,105,110,116]},{""kind"":""account"",""path"":""pool""}]},""writable"":true},{""name"":""user_base_token_account"",""writable"":true},{""name"":""user_quote_token_account"",""writable"":true},{""name"":""user_pool_token_account"",""pda"":{""program"":{""kind"":""const"",""value"":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]},""seeds"":[{""kind"":""account"",""path"":""creator""},{""kind"":""account"",""path"":""token_2022_program""},{""kind"":""account"",""path"":""lp_mint""}]},""writable"":true},{""name"":""pool_base_token_account"",""pda"":{""program"":{""kind"":""const"",""value"":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]},""seeds"":[{""kind"":""account"",""path"":""pool""},{""kind"":""account"",""path"":""base_token_program""},{""kind"":""account"",""path"":""base_mint""}]},""writable"":true},{""name"":""pool_quote_token_account"",""pda"":{""program"":{""kind"":""const"",""value"":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]},""seeds"":[{""kind"":""account"",""path"":""pool""},{""kind"":""account"",""path"":""quote_token_program""},{""kind"":""account"",""path"":""quote_mint""}]},""writable"":true},{""address"":""11111111111111111111111111111111"",""name"":""system_program""},{""address"":""TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"",""name"":""token_2022_program""},{""name"":""base_token_program""},{""name"":""quote_token_program""},{""address"":""ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"",""name"":""associated_token_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""index"",""type"":""u16""},{""name"":""base_amount_in"",""type"":""u64""},{""name"":""quote_amount_in"",""type"":""u64""}],""discriminator"":[233,146,209,142,207,104,64,188],""name"":""create_pool""},{""accounts"":[{""name"":""pool"",""writable"":true},{""name"":""global_config""},{""name"":""user"",""signer"":true},{""name"":""base_mint"",""relations"":[""pool""]},{""name"":""quote_mint"",""relations"":[""pool""]},{""name"":""lp_mint"",""relations"":[""pool""],""writable"":true},{""name"":""user_base_token_account"",""writable"":true},{""name"":""user_quote_token_account"",""writable"":true},{""name"":""user_pool_token_account"",""writable"":true},{""name"":""pool_base_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""pool_quote_token_account"",""relations"":[""pool""],""writable"":true},{""address"":""TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"",""name"":""token_program""},{""address"":""TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"",""name"":""token_2022_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""lp_token_amount_out"",""type"":""u64""},{""name"":""max_base_amount_in"",""type"":""u64""},{""name"":""max_quote_amount_in"",""type"":""u64""}],""discriminator"":[242,35,198,137,82,225,242,182],""name"":""deposit""},{""accounts"":[{""name"":""admin"",""relations"":[""global_config""],""signer"":true},{""name"":""global_config"",""writable"":true},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""disable_create_pool"",""type"":""bool""},{""name"":""disable_deposit"",""type"":""bool""},{""name"":""disable_withdraw"",""type"":""bool""},{""name"":""disable_buy"",""type"":""bool""},{""name"":""disable_sell"",""type"":""bool""}],""discriminator"":[185,173,187,90,216,15,238,233],""name"":""disable""},{""accounts"":[{""name"":""account"",""writable"":true},{""name"":""user"",""signer"":true},{""address"":""11111111111111111111111111111111"",""name"":""system_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[],""discriminator"":[234,102,194,203,150,72,62,229],""name"":""extend_account""},{""accounts"":[{""name"":""pool""},{""name"":""user"",""signer"":true,""writable"":true},{""name"":""global_config""},{""name"":""base_mint"",""relations"":[""pool""]},{""name"":""quote_mint"",""relations"":[""pool""]},{""name"":""user_base_token_account"",""writable"":true},{""name"":""user_quote_token_account"",""writable"":true},{""name"":""pool_base_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""pool_quote_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""protocol_fee_recipient""},{""name"":""protocol_fee_recipient_token_account"",""pda"":{""program"":{""kind"":""const"",""value"":[140,151,37,143,78,36,137,241,187,61,16,41,20,142,13,131,11,90,19,153,218,255,16,132,4,142,123,216,219,233,248,89]},""seeds"":[{""kind"":""account"",""path"":""protocol_fee_recipient""},{""kind"":""account"",""path"":""quote_token_program""},{""kind"":""account"",""path"":""quote_mint""}]},""writable"":true},{""name"":""base_token_program""},{""name"":""quote_token_program""},{""address"":""11111111111111111111111111111111"",""name"":""system_program""},{""address"":""ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"",""name"":""associated_token_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""base_amount_in"",""type"":""u64""},{""name"":""min_quote_amount_out"",""type"":""u64""}],""discriminator"":[51,230,133,164,1,127,131,173],""name"":""sell""},{""accounts"":[{""name"":""admin"",""relations"":[""global_config""],""signer"":true},{""name"":""global_config"",""writable"":true},{""name"":""new_admin""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[],""discriminator"":[161,176,40,213,60,184,179,228],""name"":""update_admin""},{""accounts"":[{""name"":""admin"",""relations"":[""global_config""],""signer"":true},{""name"":""global_config"",""writable"":true},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_recipients"",""type"":{""array"":[""pubkey"",8]}}],""discriminator"":[104,184,103,242,88,151,107,20],""name"":""update_fee_config""},{""accounts"":[{""name"":""pool"",""writable"":true},{""name"":""global_config""},{""name"":""user"",""signer"":true},{""name"":""base_mint"",""relations"":[""pool""]},{""name"":""quote_mint"",""relations"":[""pool""]},{""name"":""lp_mint"",""relations"":[""pool""],""writable"":true},{""name"":""user_base_token_account"",""writable"":true},{""name"":""user_quote_token_account"",""writable"":true},{""name"":""user_pool_token_account"",""writable"":true},{""name"":""pool_base_token_account"",""relations"":[""pool""],""writable"":true},{""name"":""pool_quote_token_account"",""relations"":[""pool""],""writable"":true},{""address"":""TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA"",""name"":""token_program""},{""address"":""TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb"",""name"":""token_2022_program""},{""name"":""event_authority"",""pda"":{""seeds"":[{""kind"":""const"",""value"":[95,95,101,118,101,110,116,95,97,117,116,104,111,114,105,116,121]}]}},{""name"":""program""}],""args"":[{""name"":""lp_token_amount_in"",""type"":""u64""},{""name"":""min_base_amount_out"",""type"":""u64""},{""name"":""min_quote_amount_out"",""type"":""u64""}],""discriminator"":[183,18,70,156,148,109,161,34],""name"":""withdraw""}],""metadata"":{""description"":""Created with Anchor"",""name"":""pump_amm"",""spec"":""0.1.0"",""version"":""0.1.0""},""types"":[{""name"":""BuyEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""base_amount_out"",""type"":""u64""},{""name"":""max_quote_amount_in"",""type"":""u64""},{""name"":""user_base_token_reserves"",""type"":""u64""},{""name"":""user_quote_token_reserves"",""type"":""u64""},{""name"":""pool_base_token_reserves"",""type"":""u64""},{""name"":""pool_quote_token_reserves"",""type"":""u64""},{""name"":""quote_amount_in"",""type"":""u64""},{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""lp_fee"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee"",""type"":""u64""},{""name"":""quote_amount_in_with_lp_fee"",""type"":""u64""},{""name"":""user_quote_amount_in"",""type"":""u64""},{""name"":""pool"",""type"":""pubkey""},{""name"":""user"",""type"":""pubkey""},{""name"":""user_base_token_account"",""type"":""pubkey""},{""name"":""user_quote_token_account"",""type"":""pubkey""},{""name"":""protocol_fee_recipient"",""type"":""pubkey""},{""name"":""protocol_fee_recipient_token_account"",""type"":""pubkey""}],""kind"":""struct""}},{""name"":""CreateConfigEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""admin"",""type"":""pubkey""},{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_recipients"",""type"":{""array"":[""pubkey"",8]}}],""kind"":""struct""}},{""name"":""CreatePoolEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""index"",""type"":""u16""},{""name"":""creator"",""type"":""pubkey""},{""name"":""base_mint"",""type"":""pubkey""},{""name"":""quote_mint"",""type"":""pubkey""},{""name"":""base_mint_decimals"",""type"":""u8""},{""name"":""quote_mint_decimals"",""type"":""u8""},{""name"":""base_amount_in"",""type"":""u64""},{""name"":""quote_amount_in"",""type"":""u64""},{""name"":""pool_base_amount"",""type"":""u64""},{""name"":""pool_quote_amount"",""type"":""u64""},{""name"":""minimum_liquidity"",""type"":""u64""},{""name"":""initial_liquidity"",""type"":""u64""},{""name"":""lp_token_amount_out"",""type"":""u64""},{""name"":""pool_bump"",""type"":""u8""},{""name"":""pool"",""type"":""pubkey""},{""name"":""lp_mint"",""type"":""pubkey""},{""name"":""user_base_token_account"",""type"":""pubkey""},{""name"":""user_quote_token_account"",""type"":""pubkey""}],""kind"":""struct""}},{""name"":""DepositEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""lp_token_amount_out"",""type"":""u64""},{""name"":""max_base_amount_in"",""type"":""u64""},{""name"":""max_quote_amount_in"",""type"":""u64""},{""name"":""user_base_token_reserves"",""type"":""u64""},{""name"":""user_quote_token_reserves"",""type"":""u64""},{""name"":""pool_base_token_reserves"",""type"":""u64""},{""name"":""pool_quote_token_reserves"",""type"":""u64""},{""name"":""base_amount_in"",""type"":""u64""},{""name"":""quote_amount_in"",""type"":""u64""},{""name"":""lp_mint_supply"",""type"":""u64""},{""name"":""pool"",""type"":""pubkey""},{""name"":""user"",""type"":""pubkey""},{""name"":""user_base_token_account"",""type"":""pubkey""},{""name"":""user_quote_token_account"",""type"":""pubkey""},{""name"":""user_pool_token_account"",""type"":""pubkey""}],""kind"":""struct""}},{""name"":""DisableEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""admin"",""type"":""pubkey""},{""name"":""disable_create_pool"",""type"":""bool""},{""name"":""disable_deposit"",""type"":""bool""},{""name"":""disable_withdraw"",""type"":""bool""},{""name"":""disable_buy"",""type"":""bool""},{""name"":""disable_sell"",""type"":""bool""}],""kind"":""struct""}},{""name"":""ExtendAccountEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""account"",""type"":""pubkey""},{""name"":""user"",""type"":""pubkey""},{""name"":""current_size"",""type"":""u64""},{""name"":""new_size"",""type"":""u64""}],""kind"":""struct""}},{""name"":""GlobalConfig"",""type"":{""fields"":[{""docs"":[""The admin pubkey""],""name"":""admin"",""type"":""pubkey""},{""docs"":[""The lp fee in basis points (0.01%)""],""name"":""lp_fee_basis_points"",""type"":""u64""},{""docs"":[""The protocol fee in basis points (0.01%)""],""name"":""protocol_fee_basis_points"",""type"":""u64""},{""docs"":[""Flags to disable certain functionality"",""bit 0 - Disable create pool"",""bit 1 - Disable deposit"",""bit 2 - Disable withdraw"",""bit 3 - Disable buy"",""bit 4 - Disable sell""],""name"":""disable_flags"",""type"":""u8""},{""docs"":[""Addresses of the protocol fee recipients""],""name"":""protocol_fee_recipients"",""type"":{""array"":[""pubkey"",8]}}],""kind"":""struct""}},{""name"":""Pool"",""type"":{""fields"":[{""name"":""pool_bump"",""type"":""u8""},{""name"":""index"",""type"":""u16""},{""name"":""creator"",""type"":""pubkey""},{""name"":""base_mint"",""type"":""pubkey""},{""name"":""quote_mint"",""type"":""pubkey""},{""name"":""lp_mint"",""type"":""pubkey""},{""name"":""pool_base_token_account"",""type"":""pubkey""},{""name"":""pool_quote_token_account"",""type"":""pubkey""},{""docs"":[""True circulating supply without burns and lock-ups""],""name"":""lp_supply"",""type"":""u64""}],""kind"":""struct""}},{""name"":""SellEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""base_amount_in"",""type"":""u64""},{""name"":""min_quote_amount_out"",""type"":""u64""},{""name"":""user_base_token_reserves"",""type"":""u64""},{""name"":""user_quote_token_reserves"",""type"":""u64""},{""name"":""pool_base_token_reserves"",""type"":""u64""},{""name"":""pool_quote_token_reserves"",""type"":""u64""},{""name"":""quote_amount_out"",""type"":""u64""},{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""lp_fee"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee"",""type"":""u64""},{""name"":""quote_amount_out_without_lp_fee"",""type"":""u64""},{""name"":""user_quote_amount_out"",""type"":""u64""},{""name"":""pool"",""type"":""pubkey""},{""name"":""user"",""type"":""pubkey""},{""name"":""user_base_token_account"",""type"":""pubkey""},{""name"":""user_quote_token_account"",""type"":""pubkey""},{""name"":""protocol_fee_recipient"",""type"":""pubkey""},{""name"":""protocol_fee_recipient_token_account"",""type"":""pubkey""}],""kind"":""struct""}},{""name"":""UpdateAdminEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""admin"",""type"":""pubkey""},{""name"":""new_admin"",""type"":""pubkey""}],""kind"":""struct""}},{""name"":""UpdateFeeConfigEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""admin"",""type"":""pubkey""},{""name"":""lp_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_basis_points"",""type"":""u64""},{""name"":""protocol_fee_recipients"",""type"":{""array"":[""pubkey"",8]}}],""kind"":""struct""}},{""name"":""WithdrawEvent"",""type"":{""fields"":[{""name"":""timestamp"",""type"":""i64""},{""name"":""lp_token_amount_in"",""type"":""u64""},{""name"":""min_base_amount_out"",""type"":""u64""},{""name"":""min_quote_amount_out"",""type"":""u64""},{""name"":""user_base_token_reserves"",""type"":""u64""},{""name"":""user_quote_token_reserves"",""type"":""u64""},{""name"":""pool_base_token_reserves"",""type"":""u64""},{""name"":""pool_quote_token_reserves"",""type"":""u64""},{""name"":""base_amount_out"",""type"":""u64""},{""name"":""quote_amount_out"",""type"":""u64""},{""name"":""lp_mint_supply"",""type"":""u64""},{""name"":""pool"",""type"":""pubkey""},{""name"":""user"",""type"":""pubkey""},{""name"":""user_base_token_account"",""type"":""pubkey""},{""name"":""user_quote_token_account"",""type"":""pubkey""},{""name"":""user_pool_token_account"",""type"":""pubkey""}],""kind"":""struct""}}]}",50f744c979331730eaa3534f4397402fee54647d7994d5fe14e4db5be12f1f0e,true,flipside,2025-04-01 05:05:30.970,321942956,"null",not_started,ac28efcb765c68a2df323af3cd1f7d6e,2025-04-01 05:07:15.417,2025-04-02 21:39:28.192
compr6CUsB5m2jS4Y3831ztGSTnDpnKJTKS95d64XVq,"{""accounts"":[{""name"":""RegisteredProgram"",""type"":{""fields"":[{""name"":""registeredProgramId"",""type"":""publicKey""},{""name"":""groupAuthorityPda"",""type"":""publicKey""}],""kind"":""struct""}},{""name"":""AccessMetadata"",""type"":{""fields"":[{""docs"":[""Owner of the Merkle tree.""],""name"":""owner"",""type"":""publicKey""},{""docs"":[""Program owner of the Merkle tree. This will be used for program owned Merkle trees.""],""name"":""programOwner"",""type"":""publicKey""},{""docs"":[""Optional privileged forester pubkey, can be set for custom Merkle trees"",""without a network fee. Merkle trees without network fees are not"",""forested by light foresters. The variable is not used in the account"",""compression program but the registry program. The registry program"",""implements access control to prevent contention during forester. The"",""forester pubkey specified in this struct can bypass contention checks.""],""name"":""forester"",""type"":""publicKey""}],""kind"":""struct""}},{""name"":""AddressMerkleTreeAccount"",""type"":{""fields"":[{""name"":""metadata"",""type"":{""defined"":""MerkleTreeMetadata""}}],""kind"":""struct""}},{""name"":""GroupAuthority"",""type"":{""fields"":[{""name"":""authority"",""type"":""publicKey""},{""name"":""seed"",""type"":""publicKey""}],""kind"":""struct""}},{""name"":""MerkleTreeMetadata"",""type"":{""fields"":[{""name"":""accessMetadata"",""type"":{""defined"":""AccessMetadata""}},{""name"":""rolloverMetadata"",""type"":{""defined"":""RolloverMetadata""}},{""name"":""associatedQueue"",""type"":""publicKey""},{""name"":""nextMerkleTree"",""type"":""publicKey""}],""kind"":""struct""}},{""docs"":[""Concurrent state Merkle tree used for public compressed transactions.""],""name"":""StateMerkleTreeAccount"",""type"":{""fields"":[{""name"":""metadata"",""type"":{""defined"":""MerkleTreeMetadata""}}],""kind"":""struct""}},{""name"":""QueueMetadata"",""type"":{""fields"":[{""name"":""accessMetadata"",""type"":{""defined"":""AccessMetadata""}},{""name"":""rolloverMetadata"",""type"":{""defined"":""RolloverMetadata""}},{""name"":""associatedMerkleTree"",""type"":""publicKey""},{""name"":""nextQueue"",""type"":""publicKey""},{""name"":""queueType"",""type"":""u64""}],""kind"":""struct""}},{""name"":""QueueAccount"",""type"":{""fields"":[{""name"":""metadata"",""type"":{""defined"":""QueueMetadata""}}],""kind"":""struct""}},{""name"":""RolloverMetadata"",""type"":{""fields"":[{""docs"":[""Unique index.""],""name"":""index"",""type"":""u64""},{""docs"":[""This fee is used for rent for the next account."",""It accumulates in the account so that once the corresponding Merkle tree account is full it can be rolled over""],""name"":""rolloverFee"",""type"":""u64""},{""docs"":[""The threshold in percentage points when the account should be rolled over (95 corresponds to 95% filled).""],""name"":""rolloverThreshold"",""type"":""u64""},{""docs"":[""Tip for maintaining the account.""],""name"":""networkFee"",""type"":""u64""},{""docs"":[""The slot when the account was rolled over, a rolled over account should not be written to.""],""name"":""rolledoverSlot"",""type"":""u64""},{""docs"":[""If current slot is greater than rolledover_slot + close_threshold and"",""the account is empty it can be closed. No close functionality has been"",""implemented yet.""],""name"":""closeThreshold"",""type"":""u64""},{""docs"":[""Placeholder for bytes of additional accounts which are tied to the"",""Merkle trees operation and need to be rolled over as well.""],""name"":""additionalBytes"",""type"":""u64""}],""kind"":""struct""}}],""constants"":[{""name"":""CPI_AUTHORITY_PDA_SEED"",""type"":""bytes"",""value"":""[99, 112, 105, 95, 97, 117, 116, 104, 111, 114, 105, 116, 121]""},{""name"":""GROUP_AUTHORITY_SEED"",""type"":""bytes"",""value"":""[103, 114, 111, 117, 112, 95, 97, 117, 116, 104, 111, 114, 105, 116, 121]""},{""name"":""STATE_MERKLE_TREE_HEIGHT"",""type"":""u64"",""value"":""26""},{""name"":""STATE_MERKLE_TREE_CHANGELOG"",""type"":""u64"",""value"":""1400""},{""name"":""STATE_MERKLE_TREE_ROOTS"",""type"":""u64"",""value"":""2400""},{""name"":""STATE_MERKLE_TREE_CANOPY_DEPTH"",""type"":""u64"",""value"":""10""},{""name"":""STATE_NULLIFIER_QUEUE_VALUES"",""type"":""u16"",""value"":""28_807""},{""name"":""STATE_NULLIFIER_QUEUE_SEQUENCE_THRESHOLD"",""type"":""u64"",""value"":""2400""},{""name"":""ADDRESS_MERKLE_TREE_HEIGHT"",""type"":""u64"",""value"":""26""},{""name"":""ADDRESS_MERKLE_TREE_CHANGELOG"",""type"":""u64"",""value"":""1400""},{""name"":""ADDRESS_MERKLE_TREE_ROOTS"",""type"":""u64"",""value"":""2400""},{""name"":""ADDRESS_MERKLE_TREE_CANOPY_DEPTH"",""type"":""u64"",""value"":""10""},{""name"":""ADDRESS_MERKLE_TREE_INDEXED_CHANGELOG"",""type"":""u64"",""value"":""1400""},{""name"":""ADDRESS_QUEUE_VALUES"",""type"":""u16"",""value"":""28_807""},{""name"":""ADDRESS_QUEUE_SEQUENCE_THRESHOLD"",""type"":""u64"",""value"":""2400""},{""name"":""NOOP_PUBKEY"",""type"":{""array"":[""u8"",32]},""value"":""[11 , 188 , 15 , 192 , 187 , 71 , 202 , 47 , 116 , 196 , 17 , 46 , 148 , 171 , 19 , 207 , 163 , 198 , 52 , 229 , 220 , 23 , 234 , 203 , 3 , 205 , 26 , 35 , 205 , 126 , 120 , 124 ,]""}],""errors"":[{""code"":6000,""msg"":""Integer overflow"",""name"":""IntegerOverflow""},{""code"":6001,""msg"":""InvalidAuthority"",""name"":""InvalidAuthority""},{""code"":6002,""msg"":""Leaves <> remaining accounts mismatch. The number of remaining accounts must match the number of leaves."",""name"":""NumberOfLeavesMismatch""},{""code"":6003,""msg"":""Provided noop program public key is invalid"",""name"":""InvalidNoopPubkey""},{""code"":6004,""msg"":""Number of change log indices mismatch"",""name"":""NumberOfChangeLogIndicesMismatch""},{""code"":6005,""msg"":""Number of indices mismatch"",""name"":""NumberOfIndicesMismatch""},{""code"":6006,""msg"":""NumberOfProofsMismatch"",""name"":""NumberOfProofsMismatch""},{""code"":6007,""msg"":""InvalidMerkleProof"",""name"":""InvalidMerkleProof""},{""code"":6008,""msg"":""Could not find the leaf in the queue"",""name"":""LeafNotFound""},{""code"":6009,""msg"":""MerkleTreeAndQueueNotAssociated"",""name"":""MerkleTreeAndQueueNotAssociated""},{""code"":6010,""msg"":""MerkleTreeAlreadyRolledOver"",""name"":""MerkleTreeAlreadyRolledOver""},{""code"":6011,""msg"":""NotReadyForRollover"",""name"":""NotReadyForRollover""},{""code"":6012,""msg"":""RolloverNotConfigured"",""name"":""RolloverNotConfigured""},{""code"":6013,""msg"":""NotAllLeavesProcessed"",""name"":""NotAllLeavesProcessed""},{""code"":6014,""msg"":""InvalidQueueType"",""name"":""InvalidQueueType""},{""code"":6015,""msg"":""InputElementsEmpty"",""name"":""InputElementsEmpty""},{""code"":6016,""msg"":""NoLeavesForMerkleTree"",""name"":""NoLeavesForMerkleTree""},{""code"":6017,""msg"":""InvalidAccountSize"",""name"":""InvalidAccountSize""},{""code"":6018,""msg"":""InsufficientRolloverFee"",""name"":""InsufficientRolloverFee""},{""code"":6019,""msg"":""Unsupported Merkle tree height"",""name"":""UnsupportedHeight""},{""code"":6020,""msg"":""Unsupported canopy depth"",""name"":""UnsupportedCanopyDepth""},{""code"":6021,""msg"":""Invalid sequence threshold"",""name"":""InvalidSequenceThreshold""},{""code"":6022,""msg"":""Unsupported close threshold"",""name"":""UnsupportedCloseThreshold""},{""code"":6023,""msg"":""InvalidAccountBalance"",""name"":""InvalidAccountBalance""},{""code"":6024,""name"":""UnsupportedAdditionalBytes""},{""code"":6025,""name"":""InvalidGroup""},{""code"":6026,""name"":""ProofLengthMismatch""}],""instructions"":[{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""merkleTree""},{""isMut"":true,""isSigner"":false,""name"":""queue""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""}],""args"":[{""name"":""index"",""type"":""u64""},{""name"":""programOwner"",""type"":{""option"":""publicKey""}},{""name"":""forester"",""type"":{""option"":""publicKey""}},{""name"":""addressMerkleTreeConfig"",""type"":{""defined"":""AddressMerkleTreeConfig""}},{""name"":""addressQueueConfig"",""type"":{""defined"":""AddressQueueConfig""}}],""name"":""initializeAddressMerkleTreeAndQueue""},{""accounts"":[{""docs"":[""Fee payer pays rollover fee.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""addresses"",""type"":{""vec"":{""array"":[""u8"",32]}}}],""name"":""insertAddresses""},{""accounts"":[{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":true,""isSigner"":false,""name"":""queue""},{""isMut"":true,""isSigner"":false,""name"":""merkleTree""},{""isMut"":false,""isSigner"":false,""name"":""logWrapper""}],""args"":[{""name"":""changelogIndex"",""type"":""u16""},{""name"":""indexedChangelogIndex"",""type"":""u16""},{""name"":""value"",""type"":""u16""},{""name"":""lowAddressIndex"",""type"":""u64""},{""name"":""lowAddressValue"",""type"":{""array"":[""u8"",32]}},{""name"":""lowAddressNextIndex"",""type"":""u64""},{""name"":""lowAddressNextValue"",""type"":{""array"":[""u8"",32]}},{""name"":""lowAddressProof"",""type"":{""array"":[{""array"":[""u8"",32]},16]}}],""docs"":[""Updates the address Merkle tree with a new address.""],""name"":""updateAddressMerkleTree""},{""accounts"":[{""docs"":[""Signer used to receive rollover accounts rentexemption reimbursement.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":true,""isSigner"":false,""name"":""newAddressMerkleTree""},{""isMut"":true,""isSigner"":false,""name"":""newQueue""},{""isMut"":true,""isSigner"":false,""name"":""oldAddressMerkleTree""},{""isMut"":true,""isSigner"":false,""name"":""oldQueue""}],""args"":[],""name"":""rolloverAddressMerkleTreeAndQueue""},{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""authority""},{""docs"":[""Seed public key used to derive the group authority.""],""isMut"":false,""isSigner"":true,""name"":""seed""},{""isMut"":true,""isSigner"":false,""name"":""groupAuthority""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""authority"",""type"":""publicKey""}],""docs"":[""initialize group (a group can be used to give multiple programs access"",""to the same Merkle trees by registering the programs to the group)""],""name"":""initializeGroupAuthority""},{""accounts"":[{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""groupAuthority""}],""args"":[{""name"":""authority"",""type"":""publicKey""}],""name"":""updateGroupAuthority""},{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":true,""name"":""programToBeRegistered""},{""isMut"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""groupAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[],""name"":""registerProgramToGroup""},{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""groupAuthorityPda""},{""isMut"":true,""isSigner"":false,""name"":""closeRecipient""}],""args"":[],""name"":""deregisterProgram""},{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""merkleTree""},{""isMut"":true,""isSigner"":false,""name"":""nullifierQueue""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""}],""args"":[{""name"":""index"",""type"":""u64""},{""name"":""programOwner"",""type"":{""option"":""publicKey""}},{""name"":""forester"",""type"":{""option"":""publicKey""}},{""name"":""stateMerkleTreeConfig"",""type"":{""defined"":""StateMerkleTreeConfig""}},{""name"":""nullifierQueueConfig"",""type"":{""defined"":""NullifierQueueConfig""}},{""name"":""additionalBytes"",""type"":""u64""}],""docs"":[""Initializes a new Merkle tree from config bytes."",""Index is an optional identifier and not checked by the program.""],""name"":""initializeStateMerkleTreeAndNullifierQueue""},{""accounts"":[{""docs"":[""Fee payer pays rollover fee.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Checked whether instruction is accessed by a registered program or owner = authority.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""docs"":[""Some assumes that the Merkle trees are accessed by a registered program."",""None assumes that the Merkle trees are accessed by its owner.""],""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""leaves"",""type"":{""vec"":{""defined"":""(u8,[u8;32])""}}}],""name"":""appendLeavesToMerkleTrees""},{""accounts"":[{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""logWrapper""},{""isMut"":true,""isSigner"":false,""name"":""merkleTree""},{""isMut"":true,""isSigner"":false,""name"":""nullifierQueue""}],""args"":[{""name"":""changeLogIndices"",""type"":{""vec"":""u64""}},{""name"":""leavesQueueIndices"",""type"":{""vec"":""u16""}},{""name"":""leafIndices"",""type"":{""vec"":""u64""}},{""name"":""proofs"",""type"":{""vec"":{""vec"":{""array"":[""u8"",32]}}}}],""name"":""nullifyLeaves""},{""accounts"":[{""docs"":[""Fee payer pays rollover fee.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""nullifiers"",""type"":{""vec"":{""array"":[""u8"",32]}}}],""name"":""insertIntoNullifierQueues""},{""accounts"":[{""docs"":[""Signer used to receive rollover accounts rentexemption reimbursement.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":true,""isSigner"":false,""name"":""newStateMerkleTree""},{""isMut"":true,""isSigner"":false,""name"":""newNullifierQueue""},{""isMut"":true,""isSigner"":false,""name"":""oldStateMerkleTree""},{""isMut"":true,""isSigner"":false,""name"":""oldNullifierQueue""}],""args"":[],""name"":""rolloverStateMerkleTreeAndNullifierQueue""}],""name"":""account_compression"",""types"":[{""name"":""AddressMerkleTreeConfig"",""type"":{""fields"":[{""name"":""height"",""type"":""u32""},{""name"":""changelogSize"",""type"":""u64""},{""name"":""rootsSize"",""type"":""u64""},{""name"":""canopyDepth"",""type"":""u64""},{""name"":""addressChangelogSize"",""type"":""u64""},{""name"":""networkFee"",""type"":{""option"":""u64""}},{""name"":""rolloverThreshold"",""type"":{""option"":""u64""}},{""name"":""closeThreshold"",""type"":{""option"":""u64""}}],""kind"":""struct""}},{""name"":""StateMerkleTreeConfig"",""type"":{""fields"":[{""name"":""height"",""type"":""u32""},{""name"":""changelogSize"",""type"":""u64""},{""name"":""rootsSize"",""type"":""u64""},{""name"":""canopyDepth"",""type"":""u64""},{""name"":""networkFee"",""type"":{""option"":""u64""}},{""name"":""rolloverThreshold"",""type"":{""option"":""u64""}},{""name"":""closeThreshold"",""type"":{""option"":""u64""}}],""kind"":""struct""}},{""name"":""NullifierQueueConfig"",""type"":{""fields"":[{""name"":""capacity"",""type"":""u16""},{""name"":""sequenceThreshold"",""type"":""u64""},{""name"":""networkFee"",""type"":{""option"":""u64""}}],""kind"":""struct""}},{""name"":""QueueType"",""type"":{""kind"":""enum"",""variants"":[{""name"":""NullifierQueue""},{""name"":""AddressQueue""}]}},{""name"":""AddressQueueConfig"",""type"":{""kind"":""alias"",""value"":{""defined"":""NullifierQueueConfig""}}}],""version"":""1.0.0""}",ecc25b38474e066865138e939f16b2310e6080451948e6cc065f62717e396e9a,false,frogmancapital,2025-03-21 00:33:45.960,"null","null","null",bcd8bbd95230afad58f4988d3138b9c3,2025-03-29 08:11:24.112,2025-04-02 21:39:28.192
cTokenmWW8bLPjZEBAUgYy3zKxQZW6VKi7bqNFEVv3m,"{""errors"":[{""code"":6000,""msg"":""public keys and amounts must be of same length"",""name"":""PublicKeyAmountMissmatch""},{""code"":6001,""msg"":""ComputeInputSumFailed"",""name"":""ComputeInputSumFailed""},{""code"":6002,""msg"":""ComputeOutputSumFailed"",""name"":""ComputeOutputSumFailed""},{""code"":6003,""msg"":""ComputeCompressSumFailed"",""name"":""ComputeCompressSumFailed""},{""code"":6004,""msg"":""ComputeDecompressSumFailed"",""name"":""ComputeDecompressSumFailed""},{""code"":6005,""msg"":""SumCheckFailed"",""name"":""SumCheckFailed""},{""code"":6006,""msg"":""DecompressRecipientUndefinedForDecompress"",""name"":""DecompressRecipientUndefinedForDecompress""},{""code"":6007,""msg"":""CompressedPdaUndefinedForDecompress"",""name"":""CompressedPdaUndefinedForDecompress""},{""code"":6008,""msg"":""DeCompressAmountUndefinedForDecompress"",""name"":""DeCompressAmountUndefinedForDecompress""},{""code"":6009,""msg"":""CompressedPdaUndefinedForCompress"",""name"":""CompressedPdaUndefinedForCompress""},{""code"":6010,""msg"":""DeCompressAmountUndefinedForCompress"",""name"":""DeCompressAmountUndefinedForCompress""},{""code"":6011,""msg"":""DelegateSignerCheckFailed"",""name"":""DelegateSignerCheckFailed""},{""code"":6012,""msg"":""Minted amount greater than u64::MAX"",""name"":""MintTooLarge""},{""code"":6013,""msg"":""SplTokenSupplyMismatch"",""name"":""SplTokenSupplyMismatch""},{""code"":6014,""msg"":""HeapMemoryCheckFailed"",""name"":""HeapMemoryCheckFailed""},{""code"":6015,""msg"":""The instruction is not callable"",""name"":""InstructionNotCallable""},{""code"":6016,""msg"":""ArithmeticUnderflow"",""name"":""ArithmeticUnderflow""},{""code"":6017,""msg"":""HashToFieldError"",""name"":""HashToFieldError""},{""code"":6018,""msg"":""Expected the authority to be also a mint authority"",""name"":""InvalidAuthorityMint""},{""code"":6019,""msg"":""Provided authority is not the freeze authority"",""name"":""InvalidFreezeAuthority""},{""code"":6020,""name"":""InvalidDelegateIndex""},{""code"":6021,""name"":""TokenPoolPdaUndefined""},{""code"":6022,""msg"":""Compress or decompress recipient is the same account as the token pool pda."",""name"":""IsTokenPoolPda""},{""code"":6023,""name"":""InvalidTokenPoolPda""},{""code"":6024,""name"":""NoInputTokenAccountsProvided""},{""code"":6025,""name"":""NoInputsProvided""}],""instructions"":[{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":true,""isSigner"":false,""name"":""tokenPoolPda""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""},{""isMut"":true,""isSigner"":false,""name"":""mint""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""}],""args"":[],""docs"":[""This instruction creates a token pool for a given mint. Every spl mint"",""can have one token pool. When a token is compressed the tokens are"",""transferrred to the token pool, and their compressed equivalent is"",""minted into a Merkle tree.""],""name"":""createTokenPool""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":true,""isSigner"":false,""name"":""mint""},{""docs"":[""account to a token account of a different mint will fail""],""isMut"":true,""isSigner"":false,""name"":""tokenPoolPda""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""docs"":[""programs""],""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""isMut"":true,""isSigner"":false,""name"":""merkleTree""},{""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""},{""isMut"":true,""isOptional"":true,""isSigner"":false,""name"":""solPoolPda""}],""args"":[{""name"":""publicKeys"",""type"":{""vec"":""publicKey""}},{""name"":""amounts"",""type"":{""vec"":""u64""}},{""name"":""lamports"",""type"":{""option"":""u64""}}],""docs"":[""Mints tokens from an spl token mint to a list of compressed accounts."",""Minted tokens are transferred to a pool account owned by the compressed"",""token program. The instruction creates one compressed output account for"",""every amount and pubkey input pair. A constant amount of lamports can be"",""transferred to each output account to enable. A use case to add lamports"",""to a compressed token account is to prevent spam. This is the only way"",""to add lamports to a compressed token account.""],""name"":""mintTo""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Authority is verified through proof since both owner and delegate"",""are included in the token data hash, which is a public input to the"",""validity proof.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":true,""isOptional"":true,""isSigner"":false,""name"":""tokenPoolPda""},{""isMut"":true,""isOptional"":true,""isSigner"":false,""name"":""compressOrDecompressTokenAccount""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Transfers compressed tokens from one account to another. All accounts"",""must be of the same mint. Additional spl tokens can be compressed or"",""decompressed. In one transaction only compression or decompression is"",""possible. Lamports can be transferred alongside tokens. If output token"",""accounts specify less lamports than inputs the remaining lamports are"",""transferred to an output compressed account. Signer must be owner or"",""delegate. If a delegated token account is transferred the delegate is"",""not preserved.""],""name"":""transfer""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Authority is verified through proof since both owner and delegate"",""are included in the token data hash, which is a public input to the"",""validity proof.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Delegates an amount to a delegate. A compressed token account is either"",""completely delegated or not. Prior delegates are not preserved. Cannot"",""be called by a delegate."",""The instruction creates two output accounts:"",""1. one account with delegated amount"",""2. one account with remaining(change) amount""],""name"":""approve""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Authority is verified through proof since both owner and delegate"",""are included in the token data hash, which is a public input to the"",""validity proof.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Revokes a delegation. The instruction merges all inputs into one output"",""account. Cannot be called by a delegate. Delegates are not preserved.""],""name"":""revoke""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""that this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""},{""isMut"":false,""isSigner"":false,""name"":""mint""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Freezes compressed token accounts. Inputs must not be frozen. Creates as"",""many outputs as inputs. Balances and delegates are preserved.""],""name"":""freeze""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""that this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""},{""isMut"":false,""isSigner"":false,""name"":""mint""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Thaws frozen compressed token accounts. Inputs must be frozen. Creates"",""as many outputs as inputs. Balances and delegates are preserved.""],""name"":""thaw""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Authority is verified through proof since both owner and delegate"",""are included in the token data hash, which is a public input to the"",""validity proof.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":true,""isSigner"":false,""name"":""mint""},{""isMut"":true,""isSigner"":false,""name"":""tokenPoolPda""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""inputs"",""type"":""bytes""}],""docs"":[""Burns compressed tokens and spl tokens from the pool account. Delegates"",""can burn tokens. The output compressed token account remains delegated."",""Creates one output compressed token account.""],""name"":""burn""},{""accounts"":[{""docs"":[""UNCHECKED: only pays fees.""],""isMut"":true,""isSigner"":true,""name"":""feePayer""},{""docs"":[""Authority is verified through proof since both owner and delegate"",""are included in the token data hash, which is a public input to the"",""validity proof.""],""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":false,""isSigner"":false,""name"":""cpiAuthorityPda""},{""isMut"":false,""isSigner"":false,""name"":""lightSystemProgram""},{""isMut"":false,""isSigner"":false,""name"":""registeredProgramPda""},{""isMut"":false,""isSigner"":false,""name"":""noopProgram""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionAuthority""},{""isMut"":false,""isSigner"":false,""name"":""accountCompressionProgram""},{""docs"":[""this program is the signer of the cpi.""],""isMut"":false,""isSigner"":false,""name"":""selfProgram""},{""isMut"":true,""isOptional"":true,""isSigner"":false,""name"":""tokenPoolPda""},{""isMut"":true,""isOptional"":true,""isSigner"":false,""name"":""compressOrDecompressTokenAccount""},{""isMut"":false,""isOptional"":true,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""inputs1"",""type"":{""defined"":""CompressedTokenInstructionDataTransfer""}},{""name"":""inputs2"",""type"":{""defined"":""TokenData""}}],""docs"":[""This function is a stub to allow Anchor to include the input types in"",""the IDL. It should not be included in production builds nor be called in"",""practice.""],""name"":""stubIdlBuild""}],""name"":""light_compressed_token"",""types"":[{""name"":""CompressedTokenInstructionDataTransfer"",""type"":{""fields"":[{""name"":""proof"",""type"":{""option"":{""defined"":""CompressedProof""}}},{""name"":""mint"",""type"":""publicKey""},{""docs"":[""Is required if the signer is delegate,"",""-> delegate is authority account,"",""owner = Some(owner) is the owner of the token account.""],""name"":""delegatedTransfer"",""type"":{""option"":{""defined"":""DelegatedTransfer""}}},{""name"":""inputTokenDataWithContext"",""type"":{""vec"":{""defined"":""InputTokenDataWithContext""}}},{""name"":""outputCompressedAccounts"",""type"":{""vec"":{""defined"":""PackedTokenTransferOutputData""}}},{""name"":""isCompress"",""type"":""bool""},{""name"":""compressOrDecompressAmount"",""type"":{""option"":""u64""}},{""name"":""cpiContext"",""type"":{""option"":{""defined"":""CompressedCpiContext""}}},{""name"":""lamportsChangeAccountMerkleTreeIndex"",""type"":{""option"":""u8""}}],""kind"":""struct""}},{""docs"":[""Struct to provide the owner when the delegate is signer of the transaction.""],""name"":""DelegatedTransfer"",""type"":{""fields"":[{""name"":""owner"",""type"":""publicKey""},{""docs"":[""Index of change compressed account in output compressed accounts. In"",""case that the delegate didnt spend the complete delegated compressed"",""account balance the change compressed account will be delegated to her"",""as well.""],""name"":""delegateChangeAccountIndex"",""type"":{""option"":""u8""}}],""kind"":""struct""}},{""name"":""InputTokenDataWithContext"",""type"":{""fields"":[{""name"":""amount"",""type"":""u64""},{""name"":""delegateIndex"",""type"":{""option"":""u8""}},{""name"":""merkleContext"",""type"":{""defined"":""PackedMerkleContext""}},{""name"":""rootIndex"",""type"":""u16""},{""name"":""lamports"",""type"":{""option"":""u64""}},{""docs"":[""Placeholder for TokenExtension tlv data (unimplemented)""],""name"":""tlv"",""type"":{""option"":""bytes""}}],""kind"":""struct""}},{""name"":""PackedTokenTransferOutputData"",""type"":{""fields"":[{""name"":""owner"",""type"":""publicKey""},{""name"":""amount"",""type"":""u64""},{""name"":""lamports"",""type"":{""option"":""u64""}},{""name"":""merkleTreeIndex"",""type"":""u8""},{""docs"":[""Placeholder for TokenExtension tlv data (unimplemented)""],""name"":""tlv"",""type"":{""option"":""bytes""}}],""kind"":""struct""}},{""name"":""AccountState"",""type"":{""kind"":""enum"",""variants"":[{""name"":""Initialized""},{""name"":""Frozen""}]}},{""name"":""TokenData"",""type"":{""fields"":[{""docs"":[""The mint associated with this account""],""name"":""mint"",""type"":""publicKey""},{""docs"":[""The owner of this account.""],""name"":""owner"",""type"":""publicKey""},{""docs"":[""The amount of tokens this account holds.""],""name"":""amount"",""type"":""u64""},{""docs"":[""If `delegate` is `Some` then `delegated_amount` represents"",""the amount authorized by the delegate""],""name"":""delegate"",""type"":{""option"":""publicKey""}},{""docs"":[""The accounts state""],""name"":""state"",""type"":{""defined"":""AccountState""}},{""docs"":[""Placeholder for TokenExtension tlv data (unimplemented)""],""name"":""tlv"",""type"":{""option"":""bytes""}}],""kind"":""struct""}},{""name"":""CompressedProof"",""type"":{""fields"":[{""name"":""a"",""type"":{""array"":[""u8"",32]}},{""name"":""b"",""type"":{""array"":[""u8"",64]}},{""name"":""c"",""type"":{""array"":[""u8"",32]}}],""kind"":""struct""}},{""name"":""CompressedCpiContext"",""type"":{""fields"":[{""docs"":[""Is set by the program that is invoking the CPI to signal that is should"",""set the cpi context.""],""name"":""setContext"",""type"":""bool""},{""docs"":[""Is set to wipe the cpi context since someone could have set it before"",""with unrelated data.""],""name"":""firstSetContext"",""type"":""bool""},{""docs"":[""Index of cpi context account in remaining accounts.""],""name"":""cpiContextAccountIndex"",""type"":""u8""}],""kind"":""struct""}},{""name"":""PackedMerkleContext"",""type"":{""fields"":[{""name"":""merkleTreePubkeyIndex"",""type"":""u8""},{""name"":""nullifierQueuePubkeyIndex"",""type"":""u8""},{""name"":""leafIndex"",""type"":""u32""},{""docs"":[""Index of leaf in queue. Placeholder of batched Merkle tree updates"",""currently unimplemented.""],""name"":""queueIndex"",""type"":{""option"":{""defined"":""QueueIndex""}}}],""kind"":""struct""}},{""name"":""QueueIndex"",""type"":{""fields"":[{""docs"":[""Id of queue in queue account.""],""name"":""queueId"",""type"":""u8""},{""docs"":[""Index of compressed account hash in queue.""],""name"":""index"",""type"":""u16""}],""kind"":""struct""}}],""version"":""1.0.0""}",0c1dbbe249785d8d261f22933dbc8daaacbfff9c36b6d83e51f0d0e2699ca4fe,true,frogmancapital,2025-03-21 00:30:20.739,289382780,"null",not_started,a778d4f8e93bcfd575a05f76257c8535,2025-03-21 04:09:16.522,2025-04-02 21:39:28.192
VAU1T7S5UuEHmMvXtXMVmpEoQtZ2ya7eRb7gcN47wDp,"{""accounts"":[{""name"":""ConditionalVault"",""type"":{""fields"":[{""name"":""status"",""type"":{""defined"":""VaultStatus""}},{""docs"":[""The account that can either finalize the vault to make conditional tokens"",""redeemable for underlying tokens or revert the vault to make deposit"",""slips redeemable for underlying tokens.""],""name"":""settlementAuthority"",""type"":""publicKey""},{""docs"":[""The mint of the tokens that are deposited into the vault.""],""name"":""underlyingTokenMint"",""type"":""publicKey""},{""docs"":[""The vaults storage account for deposited funds.""],""name"":""underlyingTokenAccount"",""type"":""publicKey""},{""name"":""conditionalOnFinalizeTokenMint"",""type"":""publicKey""},{""name"":""conditionalOnRevertTokenMint"",""type"":""publicKey""},{""name"":""pdaBump"",""type"":""u8""},{""name"":""decimals"",""type"":""u8""}],""kind"":""struct""}}],""errors"":[{""code"":6000,""msg"":""Insufficient underlying token balance to mint this amount of conditional tokens"",""name"":""InsufficientUnderlyingTokens""},{""code"":6001,""msg"":""This `vault_underlying_token_account` is not this vaults `underlying_token_account`"",""name"":""InvalidVaultUnderlyingTokenAccount""},{""code"":6002,""msg"":""This conditional token mint is not this vaults conditional token mint"",""name"":""InvalidConditionalTokenMint""},{""code"":6003,""msg"":""Vault needs to be settled as finalized before users can redeem conditional tokens for underlying tokens"",""name"":""CantRedeemConditionalTokens""},{""code"":6004,""msg"":""Once a vault has been settled, its status as either finalized or reverted cannot be changed"",""name"":""VaultAlreadySettled""}],""instructions"":[{""accounts"":[{""isMut"":true,""isSigner"":false,""name"":""vault""},{""isMut"":false,""isSigner"":false,""name"":""underlyingTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMint""},{""isMut"":false,""isSigner"":false,""name"":""vaultUnderlyingTokenAccount""},{""isMut"":true,""isSigner"":true,""name"":""payer""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""associatedTokenProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""}],""args"":[{""name"":""args"",""type"":{""defined"":""InitializeConditionalVaultArgs""}}],""name"":""initializeConditionalVault""},{""accounts"":[{""isMut"":true,""isSigner"":true,""name"":""payer""},{""isMut"":true,""isSigner"":false,""name"":""vault""},{""isMut"":true,""isSigner"":false,""name"":""underlyingTokenMint""},{""isMut"":false,""isSigner"":false,""name"":""underlyingTokenMetadata""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMetadata""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMetadata""},{""isMut"":false,""isSigner"":false,""name"":""tokenMetadataProgram""},{""isMut"":false,""isSigner"":false,""name"":""systemProgram""},{""isMut"":false,""isSigner"":false,""name"":""rent""}],""args"":[{""name"":""args"",""type"":{""defined"":""AddMetadataToConditionalTokensArgs""}}],""name"":""addMetadataToConditionalTokens""},{""accounts"":[{""isMut"":false,""isSigner"":true,""name"":""settlementAuthority""},{""isMut"":true,""isSigner"":false,""name"":""vault""}],""args"":[{""name"":""newStatus"",""type"":{""defined"":""VaultStatus""}}],""name"":""settleConditionalVault""},{""accounts"":[{""isMut"":false,""isSigner"":false,""name"":""vault""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""vaultUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnFinalizeTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnRevertTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""}],""args"":[{""name"":""amount"",""type"":""u64""}],""name"":""mergeConditionalTokensForUnderlyingTokens""},{""accounts"":[{""isMut"":false,""isSigner"":false,""name"":""vault""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""vaultUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnFinalizeTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnRevertTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""}],""args"":[{""name"":""amount"",""type"":""u64""}],""name"":""mintConditionalTokens""},{""accounts"":[{""isMut"":false,""isSigner"":false,""name"":""vault""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnFinalizeTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""conditionalOnRevertTokenMint""},{""isMut"":true,""isSigner"":false,""name"":""vaultUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":true,""name"":""authority""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnFinalizeTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userConditionalOnRevertTokenAccount""},{""isMut"":true,""isSigner"":false,""name"":""userUnderlyingTokenAccount""},{""isMut"":false,""isSigner"":false,""name"":""tokenProgram""}],""args"":[],""name"":""redeemConditionalTokensForUnderlyingTokens""}],""name"":""conditional_vault"",""types"":[{""name"":""AddMetadataToConditionalTokensArgs"",""type"":{""fields"":[{""name"":""proposalNumber"",""type"":""u64""},{""name"":""onFinalizeUri"",""type"":""string""},{""name"":""onRevertUri"",""type"":""string""}],""kind"":""struct""}},{""name"":""InitializeConditionalVaultArgs"",""type"":{""fields"":[{""name"":""settlementAuthority"",""type"":""publicKey""}],""kind"":""struct""}},{""name"":""VaultStatus"",""type"":{""kind"":""enum"",""variants"":[{""name"":""Active""},{""name"":""Finalized""},{""name"":""Reverted""}]}}],""version"":""0.3.0""}",397f3525606616f352b5660b4c7425cc1fb27cdd5f175557f064841684ab3b1c,true,@jackthepine,2025-02-06 18:18:21.313,266238136,"null",not_started,bd5b4c198fc23e04a84e645f04e571dc,2025-02-06 18:41:06.345,2025-04-02 21:39:28.192
﻿